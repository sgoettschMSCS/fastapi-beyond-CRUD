name: Conventional Commits Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR commits
        id: get-pr-commits
        run: |
          echo "commits=$(git log --format=%B ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT

      - name: Check Conventional Commits
        id: check-conventional-commits
        run: |
          # Regular expression for Conventional Commits
          PATTERN='^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\([-a-zA-Z0-9]+\))?(!)?: .+'
          
          VALID=true
          INVALID_COMMITS=""
          
          while IFS= read -r commit; do
            if [[ ! -z "$commit" ]] && [[ ! "$commit" =~ $PATTERN ]]; then
              VALID=false
              INVALID_COMMITS="${INVALID_COMMITS}${commit}\n"
            fi
          done <<< "${{ steps.get-pr-commits.outputs.commits }}"
          
          echo "valid=${VALID}" >> $GITHUB_OUTPUT
          echo "invalid_commits=${INVALID_COMMITS}" >> $GITHUB_OUTPUT

      - name: Create PR Comment
        if: steps.check-conventional-commits.outputs.valid != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const invalidCommits = `${{ steps.check-conventional-commits.outputs.invalid_commits }}`;
            
            const comment = `‚ùå This PR contains commits that don't follow the Conventional Commits format:
            
            ${invalidCommits}
            
            Please follow the Conventional Commits format:
            - format: type(scope?): description
            - example: feat(auth): add login functionality
            
            Valid types: build, chore, ci, docs, feat, fix, perf, refactor, revert, style, test
            
            For more information, see https://www.conventionalcommits.org/`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
            
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });

      - name: PR Status Check
        if: steps.check-conventional-commits.outputs.valid != 'true'
        run: exit 1
